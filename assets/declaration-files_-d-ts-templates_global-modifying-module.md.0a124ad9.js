import{_ as s,c as n,o as a,a as l}from"./app.2c29dd5e.js";const A=JSON.parse('{"title":"Global: Modifying Module","description":"","frontmatter":{},"headers":[{"level":2,"title":"Global-modifying Modules - \u5168\u5C40\u4FEE\u6539\u6A21\u5757","slug":"global-modifying-modules-\u5168\u5C40\u4FEE\u6539\u6A21\u5757","link":"#global-modifying-modules-\u5168\u5C40\u4FEE\u6539\u6A21\u5757","children":[]},{"level":2,"title":"Identifying global-modifying modules - \u8BC6\u522B\u5168\u5C40\u4FEE\u6539\u6A21\u5757","slug":"identifying-global-modifying-modules-\u8BC6\u522B\u5168\u5C40\u4FEE\u6539\u6A21\u5757","link":"#identifying-global-modifying-modules-\u8BC6\u522B\u5168\u5C40\u4FEE\u6539\u6A21\u5757","children":[]}],"relativePath":"declaration-files/-d-ts-templates/global-modifying-module.md"}'),o={name:"declaration-files/-d-ts-templates/global-modifying-module.md"},e=l(`<h1 id="global-modifying-module" tabindex="-1">Global: Modifying Module <a class="header-anchor" href="#global-modifying-module" aria-hidden="true">#</a></h1><h2 id="global-modifying-modules-\u5168\u5C40\u4FEE\u6539\u6A21\u5757" tabindex="-1">Global-modifying Modules - \u5168\u5C40\u4FEE\u6539\u6A21\u5757 <a class="header-anchor" href="#global-modifying-modules-\u5168\u5C40\u4FEE\u6539\u6A21\u5757" aria-hidden="true">#</a></h2><p>\u5168\u5C40\u4FEE\u6539\u6A21\u5757\u5728\u5BFC\u5165\u5168\u5C40\u4F5C\u7528\u57DF\u4E2D\u7684\u73B0\u6709\u503C\u65F6\u4FEE\u6539\u5B83\u4EEC\u3002\u4F8B\u5982\uFF0C\u53EF\u80FD\u5B58\u5728\u4E00\u4E2A\u5411 <code>String.prototype</code> \u5BFC\u5165\u65F6\u6DFB\u52A0\u65B0\u6210\u5458\u7684\u5E93\u3002\u7531\u4E8E\u8FD0\u884C\u65F6\u51B2\u7A81\u7684\u53EF\u80FD\u6027\uFF0C\u8FD9\u79CD\u6A21\u5F0F\u6709\u70B9\u5371\u9669\uFF0C\u4F46\u662F\u6211\u4EEC\u4ECD\u7136\u53EF\u4EE5\u4E3A\u5B83\u7F16\u5199\u58F0\u660E\u6587\u4EF6\u3002</p><h2 id="identifying-global-modifying-modules-\u8BC6\u522B\u5168\u5C40\u4FEE\u6539\u6A21\u5757" tabindex="-1">Identifying global-modifying modules - \u8BC6\u522B\u5168\u5C40\u4FEE\u6539\u6A21\u5757 <a class="header-anchor" href="#identifying-global-modifying-modules-\u8BC6\u522B\u5168\u5C40\u4FEE\u6539\u6A21\u5757" aria-hidden="true">#</a></h2><p>\u5168\u5C40\u4FEE\u6539\u6A21\u5757\u901A\u5E38\u5F88\u5BB9\u6613\u4ECE\u6587\u6863\u4E2D\u8BC6\u522B\u3002\u901A\u5E38\uFF0C\u5B83\u4EEC\u7C7B\u4F3C\u4E8E\u5168\u5C40\u63D2\u4EF6\uFF0C\u4F46\u662F\u9700\u8981\u4E00\u4E2A <code>require</code> \u8C03\u7528\u6765\u6FC0\u6D3B\u5B83\u4EEC\u7684\u6548\u679C\u3002</p><p>\u4F60\u53EF\u80FD\u4F1A\u770B\u5230\u8FD9\u6837\u7684\u6587\u6863\uFF1A</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki"><code><span class="line"><span style="color:#676E95;">// &#39;require&#39; call that doesn&#39;t use its return value</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> unused </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">require</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">magic-string-time</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;">/* or */</span></span>
<span class="line"><span style="color:#82AAFF;">require</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">magic-string-time</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> x </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hello, world</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;">// Creates new methods on built-in types</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(x</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">startsWithHello</span><span style="color:#A6ACCD;">())</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> y </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;">// Creates new methods on built-in types</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(y</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">reverseAndSort</span><span style="color:#A6ACCD;">())</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p>\u8FD9\u662F\u4E00\u4E2A\u4F8B\u5B50</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki"><code><span class="line"><span style="color:#676E95;">// Type definitions for [~THE LIBRARY NAME~] [~OPTIONAL VERSION NUMBER~]</span></span>
<span class="line"><span style="color:#676E95;">// Project: [~THE PROJECT NAME~]</span></span>
<span class="line"><span style="color:#676E95;">// Definitions by: [~YOUR NAME~] &lt;[~A URL FOR YOU~]&gt;</span></span>
<span class="line"><span style="color:#676E95;">/*~ This is the global-modifying module template file. You should rename it to index.d.ts</span></span>
<span class="line"><span style="color:#676E95;"> *~ and place it in a folder with the same name as the module.</span></span>
<span class="line"><span style="color:#676E95;"> *~ For example, if you were writing a file for &quot;super-greeter&quot;, this</span></span>
<span class="line"><span style="color:#676E95;"> *~ file should be &#39;super-greeter/index.d.ts&#39;</span></span>
<span class="line"><span style="color:#676E95;"> */</span></span>
<span class="line"><span style="color:#676E95;">/*~ Note: If your global-modifying module is callable or constructable, you&#39;ll</span></span>
<span class="line"><span style="color:#676E95;"> *~ need to combine the patterns here with those in the module-class or module-function</span></span>
<span class="line"><span style="color:#676E95;"> *~ template files</span></span>
<span class="line"><span style="color:#676E95;"> */</span></span>
<span class="line"><span style="color:#C792EA;">declare</span><span style="color:#A6ACCD;"> global </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#676E95;">/*~ Here, declare things that go in the global namespace, or augment</span></span>
<span class="line"><span style="color:#676E95;">   *~ existing declarations in the global namespace</span></span>
<span class="line"><span style="color:#676E95;">   */</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">interface</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">String</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    fancyFormat</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">opts</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">StringFormatOptions</span><span style="color:#89DDFF;">):</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#676E95;">/*~ If your module exports types or values, write them as usual */</span></span>
<span class="line"><span style="color:#89DDFF;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">interface</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">StringFormatOptions</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">fancinessLevel</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#676E95;">/*~ For example, declaring a method on the module (in addition to its global side effects) */</span></span>
<span class="line"><span style="color:#89DDFF;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">doSomething</span><span style="color:#89DDFF;">():</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">void</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;">/*~ If your module exports nothing, you&#39;ll need this line. Otherwise, delete it */</span></span>
<span class="line"><span style="color:#89DDFF;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{};</span></span>
<span class="line"></span></code></pre></div>`,9),p=[e];function t(r,c,i,y,d,F){return a(),n("div",null,p)}const C=s(o,[["render",t]]);export{A as __pageData,C as default};
